// ----------------------------------------------------------------------------
#ifndef CGTrailGenerator_h
#define CGTrailGenerator_h 1
// ----------------------------------------------------------------------------
#include "GammaE_Scene.h"
#include "BillBoard/CGBillboardRenderer.h"
#include "CGTrail.h"
// ----------------------------------------------------------------------------
class CGTrailInstance;
class CGTrailGenerator : public CGResource
{
	public:

		CGTrailGenerator() : m_uiMaxDivisions(0), m_uiMaxPoints(0), m_poBBR(NULL), m_poShader(NULL) {};

		/// Initializes the trail generator
		virtual void Init(){};

		/// Creates a trail structure specific to the generator.
		virtual CGTrail* poCreateInstanceData() = 0;

        /// Generates the geometry associated for  the given instance
        virtual void UpdateInstance(CGTrailInstance* _poInst,float _fDeltaT) = 0;

		/// Initializes an independent instance
		virtual void InitInstance(CGTrailInstance* _poInst) = 0;

		/// Sets the shader for the instances of this trail system generator
		void SetBillboardRenderer(CGBillboardRenderer* _poBBR)
		{
			m_poBBR = _poBBR;
		};

		/// Retrieves the shader used by the instances generated by this trail generator
		virtual CGBillboardRenderer* poGetBillboardRenderer()
		{
			return(m_poBBR);
		};

		/// Sets the maximum number of divisions a trail instance could have
		void SetMaxDivisions(uint _uiMaxDivisions)
		{
			m_uiMaxDivisions = _uiMaxDivisions;
		}

		/// Retrieves the maximum number of particles every instance will handle
		uint uiMaxDivisions()
		{
			return (m_uiMaxDivisions);
		}

		/// Sets the maximum number of points
		void SetMaxPoints(uint _uiMaxPoints)
		{
			m_uiMaxPoints = _uiMaxPoints;
		}

		/// Retrieves the maximum number of particles every instance will handle
		uint uiMaxPoints()
		{
			return (m_uiMaxPoints);
		}

		/// Sets the shader for the instances of this trail system generator
		void SetShader(CE3D_Shader* _poShader)
		{
			m_poShader = _poShader;
		};

		/// Retrieves the shader used by the instances generated by this trail generator
		virtual CE3D_Shader* poGetShader()
		{
			return(m_poShader);
		};

		/// Set Energy Parameters
		void SetEnergyPars(float _fIniEnergy,float _fRndEnergy)
		{
			m_fIniEnergy = _fIniEnergy;
			m_fRndEnergy = _fRndEnergy;
		}

	protected:

		/*
		The generator classes should implement functions similar to these

		/// Initializes an independent trail
		// virtual void InitTrail(CGTrail*) = 0;

		/// Updates an independent trail
		// virtual void UpdateTrail(CGTrail*) = 0;
		*/
	
	protected:

		/// The maximum number of points one instance will store
		uint m_uiMaxPoints;

		/// Maximum number of subdivisions per trail
		uint m_uiMaxDivisions;

		/// The billboard renderer that will store/render the generated geometry
		CGBillboardRenderer* m_poBBR;
		
		/// The shader used to this trail generator
		CE3D_Shader*		m_poShader;

		/// Initial Energy
		float   m_fIniEnergy;

		/// Random Initial Energy Factor
		float   m_fRndEnergy;
};
// ----------------------------------------------------------------------------
#endif
// ----------------------------------------------------------------------------
